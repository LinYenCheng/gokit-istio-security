apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: extauth-authz
  namespace: default
spec:
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: envoy.http_connection_manager
            subFilter:
              name: envoy.router
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.ext_authz
        typed_config:
          '@type': type.googleapis.com/envoy.config.filter.http.ext_authz.v2.ExtAuthz
          grpc_service:
            envoy_grpc:
              cluster_name: grpc-ext-auth-cluster
  - applyTo: CLUSTER
    match:
      context: SIDECAR_INBOUND
    patch:
      operation: ADD
      value:
        connect_timeout: 0.25s
        http2_protocol_options: {}
        load_assignment:
          cluster_name: grpc-als-cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: extauthz.default.svc.cluster.local
                    port_value: 50051
        name: grpc-ext-auth-cluster
        type: STRICT_DNS
  workloadSelector:
    labels:
      app: authz
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: extauth-add
  namespace: default
spec:
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: envoy.http_connection_manager
            subFilter:
              name: envoy.router
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.ext_authz
        typed_config:
          '@type': type.googleapis.com/envoy.config.filter.http.ext_authz.v2.ExtAuthz
          grpc_service:
            envoy_grpc:
              cluster_name: grpc-ext-auth-cluster
  - applyTo: CLUSTER
    match:
      context: SIDECAR_INBOUND
    patch:
      operation: ADD
      value:
        connect_timeout: 0.25s
        http2_protocol_options: {}
        load_assignment:
          cluster_name: grpc-als-cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: extauthz.default.svc.cluster.local
                    port_value: 50051
        name: grpc-ext-auth-cluster
        type: STRICT_DNS
  workloadSelector:
    labels:
      app: add
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: extauth-tictac
  namespace: default
spec:
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: envoy.http_connection_manager
            subFilter:
              name: envoy.router
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.ext_authz
        typed_config:
          '@type': type.googleapis.com/envoy.config.filter.http.ext_authz.v2.ExtAuthz
          grpc_service:
            envoy_grpc:
              cluster_name: grpc-ext-auth-cluster
  - applyTo: CLUSTER
    match:
      context: SIDECAR_INBOUND
    patch:
      operation: ADD
      value:
        connect_timeout: 0.25s
        http2_protocol_options: {}
        load_assignment:
          cluster_name: grpc-als-cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: extauthz.default.svc.cluster.local
                    port_value: 50051
        name: grpc-ext-auth-cluster
        type: STRICT_DNS
  workloadSelector:
    labels:
      app: tictac
---
apiVersion: v1
kind: Service
metadata:
  name: extauthz
  namespace: default
spec:
  ports:
  - name: grpc
    port: 50051
    protocol: TCP
    targetPort: 50051
  selector:
    app: extauthz
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: extauthz
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: extauthz
  template:
    metadata:
      labels:
        app: extauthz
    spec:
      containers:
      - env:
        - name: QS_AUTHZ_URL
          value: authz:8000
        - name: QS_BY_PASS
          value: "false"
        - name: QS_GRPC_PORT
          value: "50051"
        - name: QS_LOG_LEVEL
          value: info
        image: index.docker.io/cage1016/gokit-istio-security-extauthz:38b0cc81f6d54e0119745f4f833f640198ed25261f0024b3549b9f1c2d63f780
        name: extauthz
---
apiVersion: security.istio.io/v1beta1
kind: RequestAuthentication
metadata:    
  name: require-jwt
  namespace: istio-system
spec:
  jwtRules:
  - issuer: testing@secure.istio.io
    jwks: |
      {"keys":[{"kty":"RSA","kid":"GkNj4pf4WEojKjS1B8nvVceMoqlC8RqOwF5EhbHQ0Rk","n":"28yv3Dd74NIZPINbES_9EsVDR-e4DyprVyM9nq5l_-lJ0Lyae1ifxxJd4oMDuBRBvjZQUL0JuxzG-11eF4nRyvS_jir4s7FqAYAlyZw8-MfieTSz7E_i4Lg8El2MeWEgkairu62QX2-e8lm7SlMfSDNtEWN2hA3AwEnBnzWNEwcSwz3nwYhuPT5pX3Gyea2QH9EgPcket1HUbiuWx2ieiWDRq1zYDHt-B4XMvpOLxf-2VH98WNwfdA77lc9D7wbpl8-D1BqdQXLoF4-aw7un_TpjaMc72E3tnfiRyV6NG4RsoOxdmKVxtl96E_vVfZrAIytJTT2_UIEamBPlmMe1uQ","e":"AQAB"}]}
    outputPayloadToHeader: X-Jwt-Playload
  selector:
    matchLabels:
      app: istio-ingressgateway
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:  
  name: require-jwt
  namespace: istio-system
spec:
  rules:
  - from:
    - source:
        requestPrincipals:
        - '*'
    when:
    - key: request.auth.claims[iss]
      values:
      - testing@secure.istio.io
  selector:
    matchLabels:
      app: istio-ingressgateway

